# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: geosolutions
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: python2.7
  region: us-east-2
  environment:
    targetBucket: geosolutionsui
  profile: hackathon2019
  iamRoleStatements:
   - Effect: "Allow"
     Action: [
       "s3:*"
     ]
     Resource: "*"
   - Effect: Allow # note that these rights are given in the default policy and are required if you want logs out of your lambda(s)
     Action:
       - logs:CreateLogGroup
       - logs:CreateLogStream
       - logs:PutLogEvents
     Resource:
       - 'Fn::Join':
         - ':'
         -
           - 'arn:aws:logs'
           - Ref: 'AWS::Region'
           - Ref: 'AWS::AccountId'
           - 'log-group:/aws/lambda/*:*:*'
   -  Effect: "Allow"
      Action:
       - "s3:PutObject"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:s3:::"
            - "Ref" : "ServerlessDeploymentBucket"
            
plugins:
    - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: true
    slim: true
    zip: true
# you can add packaging information here
#package:
#  include:
#    - include-me.py
#    - include-me-dir/**
#  exclude:
#    - exclude-me.py
#    - exclude-me-dir/**

functions:
  hello:
    handler: handler.hello
#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
    events:
      - s3:
          bucket: mygeoinputbucket
          event: s3:ObjectCreated:*
          rules:
            - prefix: raw/
            - suffix: .geojson

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
